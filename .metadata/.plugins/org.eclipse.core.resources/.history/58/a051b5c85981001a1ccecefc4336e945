package com.javatpoint.service;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.javatpoint.exception.BusinessException;
import com.javatpoint.model.Books;
import com.javatpoint.repository.BooksRepository;

//defining the business logic  
@Service
public class BooksService {
	@Autowired
	BooksRepository booksRepository;

//getting all books record by using the method findaAll() of CrudRepository  
	public List<Books> getAllBooks() {
		List<Books> books = new ArrayList<Books>();
		booksRepository.findAll().forEach(books1 -> books.add(books1));
		return books;
	}

//getting a specific record by using the method findById() of CrudRepository  
	public Books getBooksById(int id) {
		return booksRepository.findById(id).get();
	}

//saving a specific record by using the method save() of CrudRepository  
	public void saveOrUpdate(Books books) {
		String newS = "";
		String newS1 = "";
		String newS2 = "";
		String bookName = books.getBookname();
		if (bookName != null || !bookName.isEmpty()) {

			String[] splitBN = bookName.split(" ");

			for (String sbn : splitBN) {
				newS = sbn.substring(0, 1).toUpperCase() + sbn.substring(1);
			//	newS1 = sbn.substring(0, 1).toUpperCase() + sbn.substring(1);

			}
		}

		if (books.getBookname().equals(books.getAuthor())) {
			throw new BusinessException("bookName and author cant be same");

		} else {

			books.setBookname(newS);
			booksRepository.save(books);
		}
	}

//deleting a specific record by using the method deleteById() of CrudRepository  
	public void delete(int id) {
		booksRepository.deleteById(id);
	}

//updating a record  
	public void update(Books books, int bookid) {
		booksRepository.save(books);
	}
}