package com.javatpoint.Bmodel;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.HashSet;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;
import java.util.StringTokenizer;
import java.util.TreeSet;

public class PractCode {

	public static void main(String[] args) {

		// remove duplicate element from array
//		Integer[] numbers = new Integer[] {1,2,3,4,5,1,3,5};
//		
//		LinkedHashSet<Integer> lhashset = new LinkedHashSet<Integer>(Arrays.asList(numbers));
//		
//		for( Integer num: lhashset) {
//			System.out.println(num);
//		}

		// remove whitespace from String
//		String s = "Java    is oop";
//		StringTokenizer st = new StringTokenizer(s);
//		StringBuffer sb = new StringBuffer();
//		while(st.hasMoreElements()) {
//		sb.append(st.nextElement()).append(" ");
//	
//		}
//		System.out.println(sb.toString());

		// reverse word in string
//		String s = "Java is oop";
//		StringBuilder sb = new StringBuilder();
//		String[] str = s.split(" ");
//
//		for (String str1 : str) {
//			String reverseWord = new StringBuilder(str1).reverse().toString();
//            sb.append(reverseWord).append(" ");
//            }
//		System.out.println(sb.toString());

		// find largest and lowest integer number from array
        int[] array = { 10, 20, 30, 40 };
        int smallest = array[0];
		int biggest = array[0];
        for (int i = 1; i < array.length; i++) {
            if (array[i] > biggest) {
				biggest = array[i];
			} else if (array[i] < smallest) {
				smallest = array[i];
			}
		}
        System.out.println("smallest" + " " + smallest);
		System.out.println("largest" + " " + biggest);

		
		
		
	}

}